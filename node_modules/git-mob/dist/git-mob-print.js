"use strict";var J=Object.create;var E=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,D=Object.prototype.hasOwnProperty;var G=(t,o,n,s)=>{if(o&&typeof o=="object"||typeof o=="function")for(let a of H(o))!D.call(t,a)&&a!==n&&E(t,a,{get:()=>o[a],enumerable:!(s=L(o,a))||s.enumerable});return t};var d=(t,o,n)=>(n=t!=null?J(N(t)):{},G(o||!t||!t.__esModule?E(n,"default",{value:t,enumerable:!0}):n,t));var p=d(require("os")),S=d(require("minimist"));var c=require("fs"),h=require("util"),l=require("git-mob-core");function A({name:t,email:o}){return`${t} <${o}>`}function y(t,o,n){async function s(e){let r=t||(0,h.promisify)(c.readFile);try{return await r(e,"utf8")}catch(i){throw new Error(i.message)}}async function a(e,r){let i=o||(0,h.promisify)(c.appendFile);try{return await i(e,r,"utf8")}catch(u){throw new Error(u.message)}}async function T(e,r){let i=n||(0,h.promisify)(c.writeFile);try{return await i(e,r,"utf8")}catch(u){throw new Error(u.message)}}return{read:async()=>{let e=await s((0,l.pathToCoAuthors)());try{return JSON.parse(e)}catch(r){throw new Error("Invalid JSON "+r.message)}},write:async e=>{try{return a((0,l.pathToCoAuthors)(),JSON.stringify(e,null,2))}catch(r){throw new Error("Invalid JSON "+r.message)}},overwrite:async e=>{try{return T((0,l.pathToCoAuthors)(),JSON.stringify(e,null,2))}catch(r){throw new Error("Invalid JSON "+r.message)}},fileExists:()=>(0,c.existsSync)((0,l.pathToCoAuthors)()),author(e,r){let{coauthors:i}=r;return U(e,i),i[e]},coAuthorsInitials(e,r){let{coauthors:i}=e;return Object.keys(i).reduce((u,g)=>(r.includes(A(i[g]))&&u.push(g),u),[])},toList(e){return Object.entries(e.coauthors).map(i=>{let[u,{name:g,email:F}]=i;return[u,g,F].join(" ")})}}}function U(t,o){if(!(t in o))throw new Error(`Author with initials "${t}" not found!`)}var P=require("common-tags"),I=d(require("update-notifier"));var rt=1e3*60*60*24*7;function x(){let t=P.stripIndent`
    Usage
      $ git mob-print
    Options
      -h  Prints usage information
      -i  Prints a comma separated list of selected co-author initials
    Examples  
      $ git mob -i  # Prints a list of selected co-authors initials (jd,bd)
  `;console.log(t)}var w=require("os");var C=require("child_process");function m(t){return(0,C.spawnSync)(t,{encoding:"utf8",shell:!0})}function b(t){return m(`git config --get ${t}`).stdout.trim()}function M(t){return m(`git config --get-all ${t}`).stdout.trim()}function O(t,o){let{status:n,stderr:s}=m(`git config ${t} "${o}"`);if(n!==0){console.log(s);let a=`Option ${t} has multiple values. Cannot overwrite multiple values for option ${t} with a single value.`;throw new Error(a)}}function k(t,o){m(`git config --add ${t} "${o}"`)}function f(t){return m(`git config ${t}`).status===0}function B(t){m(`git config --remove-section ${t}`)}function _(){return b("commit.template")}function z(t){O("--global commit.template",t)}function V(){return f("commit.template")}function W(){return f("--local commit.template")}function R(){return f("--global commit.template")}function Z(){return b("--global commit.template")}var $={set:O,get:b,getAll:M,add:k,has:f,removeSection:B,getTemplatePath:_,setTemplatePath:z,hasTemplatePath:V,usingLocalTemplate:W,usingGlobalTemplate:R,getGlobalTemplate:Z};function j(t){return t.map(o=>"Co-authored-by: "+o).join(w.EOL)}function v(){return $.getAll("--global git-mob.co-author")}var q=(0,S.default)(process.argv.slice(2),{alias:{i:"initials",h:"help"}});K(q);async function K(t){t.help&&(x(),process.exit(0)),t.initials&&(await X(),process.exit(0)),Q()}async function Q(){try{let t=j(v().split(p.default.EOL).filter(Boolean));console.log(p.default.EOL+p.default.EOL+t)}catch(t){console.error(`Error: ${t.message}`),process.exit(1)}}async function X(){try{let t=y(),o=await t.read(),n=v(),s=t.coAuthorsInitials(o,n);s.length>0&&console.log(s.join(","))}catch(t){console.error(`Error: ${t.message}`),process.exit(1)}}
