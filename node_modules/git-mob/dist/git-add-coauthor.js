"use strict";var x=Object.create;var d=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var J=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var A=(o,t,a,c)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of C(t))!S.call(o,s)&&s!==a&&d(o,s,{get:()=>t[s],enumerable:!(c=O(t,s))||c.enumerable});return o};var g=(o,t,a)=>(a=o!=null?x(J(o)):{},A(t||!o||!o.__esModule?d(a,"default",{value:o,enumerable:!0}):a,o));var v=g(require("minimist"));var p=require("common-tags"),D=g(require("update-notifier"));var B=1e3*60*60*24*7;function f(){let o=p.stripIndent`
    Usage
      $ git add-coauthor <co-author-initials> "Coauthor Name" <coauthor-email-address>
    Options
      -h  Prints usage information
    Examples
      $ git add-coauthor jd "John Doe" johndoe@aol.org  # adds John Doe to coauthors file
  `;console.log(o)}function w(o){return/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[(?:\d{1,3}\.){3}\d{1,3}])|((\w+\.)+[a-zA-Z]{2,}))$/.test(o)}var u=require("fs"),l=require("util"),m=require("git-mob-core");function $({name:o,email:t}){return`${o} <${t}>`}function b(o,t,a){async function c(r){let e=o||(0,l.promisify)(u.readFile);try{return await e(r,"utf8")}catch(i){throw new Error(i.message)}}async function s(r,e){let i=t||(0,l.promisify)(u.appendFile);try{return await i(r,e,"utf8")}catch(n){throw new Error(n.message)}}async function j(r,e){let i=a||(0,l.promisify)(u.writeFile);try{return await i(r,e,"utf8")}catch(n){throw new Error(n.message)}}return{read:async()=>{let r=await c((0,m.pathToCoAuthors)());try{return JSON.parse(r)}catch(e){throw new Error("Invalid JSON "+e.message)}},write:async r=>{try{return s((0,m.pathToCoAuthors)(),JSON.stringify(r,null,2))}catch(e){throw new Error("Invalid JSON "+e.message)}},overwrite:async r=>{try{return j((0,m.pathToCoAuthors)(),JSON.stringify(r,null,2))}catch(e){throw new Error("Invalid JSON "+e.message)}},fileExists:()=>(0,u.existsSync)((0,m.pathToCoAuthors)()),author(r,e){let{coauthors:i}=e;return N(r,i),i[r]},coAuthorsInitials(r,e){let{coauthors:i}=r;return Object.keys(i).reduce((n,h)=>(e.includes($(i[h]))&&n.push(h),n),[])},toList(r){return Object.entries(r.coauthors).map(i=>{let[n,{name:h,email:P}]=i;return[n,h,P].join(" ")})}}}function N(o,t){if(!(o in t))throw new Error(`Author with initials "${o}" not found!`)}async function E([o,t,a]){let c=b(),s=await c.read();if(o in s.coauthors)throw new Error(o+" already exists in .git-coauthors");return s.coauthors[o]={name:t,email:a},await c.overwrite(s),!0}var U="\x1B[31m";var F="\x1B[0m";function y(o){return U+o+F}var H=(0,v.default)(process.argv.slice(2),{alias:{h:"help"}});function L(o){if(o.length!==3)throw new Error("Incorrect number of parameters.");if(!w(o[2]))throw new Error("Invalid email format.");return[o[0],o[1],o[2]]}async function I(o){if(o.help){f();return}let t=L(o._);await E(t);let[,a]=t;console.log(a+" has been added to the .git-coauthors file")}I(H).then(()=>{process.exit(0)}).catch(o=>{console.error(y(o.message)),process.exit(1)});
