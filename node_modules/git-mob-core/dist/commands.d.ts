declare function getAll(key: any): any;
declare function get(key: any): any;
declare function has(key: any): boolean;
declare function set(key: any, value: any): void;
declare function removeGitMobSection(): {
    /**
     * Process identification number of the child process
     */
    pid: number;
    /**
     * Array of results from stdio output
     */
    output: any[];
    /**
     * The contents of output[1]
     */
    stdout: Buffer;
    /**
     * The contents of output[2]
     */
    stderr: Buffer;
    /**
     * The exit code of the child process
     */
    status: number;
    /**
     * The signal used to kill the child process
     */
    signal: string;
    /**
     * The error object if the child process failed or timed out
     */
    error: Error;
};
declare function gitAddCoAuthor(coAuthor: any): {
    /**
     * Process identification number of the child process
     */
    pid: number;
    /**
     * Array of results from stdio output
     */
    output: any[];
    /**
     * The contents of output[1]
     */
    stdout: Buffer;
    /**
     * The contents of output[2]
     */
    stderr: Buffer;
    /**
     * The exit code of the child process
     */
    status: number;
    /**
     * The signal used to kill the child process
     */
    signal: string;
    /**
     * The error object if the child process failed or timed out
     */
    error: Error;
};
declare function usingLocalTemplate(): boolean;
declare function usingGlobalTemplate(): boolean;
declare function getGlobalTemplate(): any;
export function getRepoAuthors(): Promise<any>;
export declare namespace config {
    export { getAll };
    export { get };
    export { has };
    export { set };
}
export declare namespace mob {
    export { removeGitMobSection };
    export { gitAddCoAuthor };
    export { usingLocalTemplate };
    export { usingGlobalTemplate };
    export { getGlobalTemplate };
}
export {};
