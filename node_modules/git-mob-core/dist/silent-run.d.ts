/**
 * @typedef {Object} ChildProcess.SpawnResult
 * @property {number} pid Process identification number of the child process
 * @property {Array} output Array of results from stdio output
 * @property {Buffer} stdout  The contents of output[1]
 * @property {Buffer} stderr The contents of output[2]
 * @property {number} status The exit code of the child process
 * @property {string} signal The signal used to kill the child process
 * @property {Error} error The error object if the child process failed or timed out
 */
/**
 * Runs the given command in a shell.
 * @param {string} command The command to execute
 * @returns {ChildProcess.SpawnResult} object from child_process.spawnSync
 */
export function silentRun(command: string): ChildProcess.SpawnResult;
declare namespace ChildProcess {
    type SpawnResult = {
        /**
         * Process identification number of the child process
         */
        pid: number;
        /**
         * Array of results from stdio output
         */
        output: any[];
        /**
         * The contents of output[1]
         */
        stdout: Buffer;
        /**
         * The contents of output[2]
         */
        stderr: Buffer;
        /**
         * The exit code of the child process
         */
        status: number;
        /**
         * The signal used to kill the child process
         */
        signal: string;
        /**
         * The error object if the child process failed or timed out
         */
        error: Error;
    };
}
export {};
